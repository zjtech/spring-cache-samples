//Global project information
ext.projectInfo = [
        'group'                   : 'zjtech',
        'version'                 : '0.1-SNAPSHOT',
        'contractTestStubsVersion': '0.1',
        'sourceCompatibility'     : '1.8',
        'targetCompatibility'     : '1.8'
]

//The libraries used for project
ext.libs = [
        // plugins
        'spring-boot-gradle-plugin'                 : 'org.springframework.boot:spring-boot-gradle-plugin:2.1.1.RELEASE',
        'dependency-management-plugin'              : 'io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE',

        //spring boot dependencies
        'spring-boot-starter-data-mongodb-reactive' : 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive',
        'spring-boot-starter-data-redis-reactive'   : 'org.springframework.boot:spring-boot-starter-data-redis-reactive',
        'spring-boot-starter-data-redis'            : 'org.springframework.boot:spring-boot-starter-data-redis',
        'spring-boot-starter-webflux'               : 'org.springframework.boot:spring-boot-starter-webflux',
        'spring-boot-starter-web'                   : 'org.springframework.boot:spring-boot-starter-web',

        'spring-boot-starter-data-jpa'              : 'org.springframework.boot:spring-boot-starter-data-jpa',
        'spring-boot-starter-aop'                   : 'org.springframework.boot:spring-boot-starter-aop',
        'spring-boot-starter-security'              : 'org.springframework.boot:spring-boot-starter-security',
        'spring-boot-starter-actuator'              : 'org.springframework.boot:spring-boot-starter-actuator',
        'spring-boot-starter-cache'                 : 'org.springframework.boot:spring-boot-starter-cache',
        'spring-retry'                              : 'org.springframework.retry:spring-retry',


        'spring-cloud-contract-gradle-plugin'       : 'org.springframework.cloud:spring-cloud-contract-gradle-plugin:2.0.2.RELEASE',
        'sonarqube-gradle-plugin'                   : 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2',

        /*spring cloud*/
        'spring-cloud-dependencies'                 : 'org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2',
        'spring-cloud-stream-reactive'              : 'org.springframework.cloud:spring-cloud-stream-reactive',
        'avro'                                      : 'org.apache.avro:avro:1.8.2',
        'spring-cloud-stream-schema'                : 'org.springframework.cloud:spring-cloud-stream-schema',
        'spring-cloud-starter-stream-kafka'         : 'org.springframework.cloud:spring-cloud-starter-stream-kafka',
        'spring-cloud-starter-contract-verifier'    : 'org.springframework.cloud:spring-cloud-starter-contract-verifier',
        'spring-cloud-starter-contract-stub-runner' : 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner',
        'spring-cloud-sleuth-stream'                : 'org.springframework.cloud:spring-cloud-sleuth-stream',
        'spring-cloud-starter-sleuth'               : 'org.springframework.cloud:spring-cloud-starter-sleuth',
        'spring-cloud-starter-zipkin'               : 'org.springframework.cloud:spring-cloud-starter-zipkin',
        'spring-cloud-starter-bus-kafka'            : 'org.springframework.cloud:spring-cloud-starter-bus-kafka',
        'spring-cloud-config-client'                : 'org.springframework.cloud:spring-cloud-config-client',

        'spring-cloud-starter-netflix-eureka-server': 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server',
        'spring-cloud-starter-netflix-eureka-client': 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client',
        'spring-cloud-starter-gateway'              : 'org.springframework.cloud:spring-cloud-starter-gateway',
        'spring-cloud-security'                     : 'org.springframework.cloud:spring-cloud-security',
//    'spring-cloud-starter-oauth2'               : 'org.springframework.cloud:spring-cloud-starter-oauth2',


        'mysql'                                     : 'mysql:mysql-connector-java',
        'lombok'                                    : 'org.projectlombok:lombok:1.18.0',
        'h2-database'                               : 'com.h2database:h2',

        //swagger documentation
        'springfox-swagger2'                        : 'io.springfox:springfox-swagger2:2.9.2',
        'springfox-swagger-ui'                      : 'io.springfox:springfox-swagger-ui:2.9.2',

        //for unit test
        'powermock-module-junit4'                   : 'org.powermock:powermock-module-junit4:2.0.0-RC.4',
        'powermock-api-mockito2'                    : 'org.powermock:powermock-api-mockito2:2.0.0-RC.4',

        'powermock-module-junit4-rule-agent'        : 'org.powermock:powermock-module-junit4-rule-agent:2.0.0-RC.4',
        'spring-boot-starter-test'                  : 'org.springframework.boot:spring-boot-starter-test',
        'spring-security-test'                      : 'org.springframework.security:spring-security-test',
        'spring-cloud-stream-test-support'          : 'org.springframework.cloud:spring-cloud-stream-test-support',
        'mockito-inline'                            : 'org.mockito:mockito-inline:2.23.4'

]

//set the version of mockito to V2.x for powermock since the spring framework still uses an old version v1.x
//that cannot meet our requirements
ext['mockito.version'] = '2.23.4'

// upgrade mysql connector to the latest version since the dependency check tool complains
// the origin version of mysql connector is too old
ext['mysql.version'] = '8.0.13'